[
    {
        "class name": "Snake",
        "function": "Snake",
        "func_documentation": "",
        "func_block": "    public Snake() {\n\t\tsetTitle(\"Snake\");\n\n        startGame();\n        imagenSnake = new ImagenSnake();\n\n        this.getContentPane().add(imagenSnake);\n\n\t\tsetSize(width,height);\n\n\t\tthis.addKeyListener(new Teclas());\n\t\tthis.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\tJFrame.setDefaultLookAndFeelDecorated(false);\n\t\tsetUndecorated(true);\n\t\tDimension dim = Toolkit.getDefaultToolkit().getScreenSize();\n\t\tthis.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);\n\n        setVisible(true);\n        Momento momento = new Momento();\n\t\tThread trid = new Thread(momento);\n\t\ttrid.start();\n    }"
    },
    {
        "class name": "Snake",
        "function": "startGame",
        "func_documentation": "",
        "func_block": "    public void startGame() {\n\t\tcomida = new Point(200,100);\n        snake = new Point(320,240);\n\t\tlistaPosiciones = new ArrayList<Point>();\n        listaPosiciones.add(snake);\n\n\t\tlongitud = listaPosiciones.size();\n    }"
    },
    {
        "class name": "Snake",
        "function": "generarComida",
        "func_documentation": "",
        "func_block": "\tpublic void generarComida() {\n\t\tRandom rnd = new Random();\n\n\t\tcomida.x = (rnd.nextInt(width)) + 5;\n\t\tif((comida.x % 5) > 0) {\n\t\t\tcomida.x = comida.x - (comida.x % 5);\n\t\t}\n\n\t\tif(comida.x < 5) {\n\t\t\tcomida.x = comida.x + 10;\n\t\t}\n\t\tif(comida.x > width) {\n\t\t\tcomida.x = comida.x - 10;\n\t\t}\n\n\t\tcomida.y = (rnd.nextInt(height)) + 5;\n\t\tif((comida.y % 5) > 0) {\n\t\t\tcomida.y = comida.y - (comida.y % 5);\n\t\t}\n\n\t\tif(comida.y > height) {\n\t\t\tcomida.y = comida.y - 10;\n\t\t}\n\t\tif(comida.y < 0) {\n\t\t\tcomida.y = comida.y + 10;\n\t\t}\n\n\t}"
    },
    {
        "class name": "Snake",
        "function": "actualizar",
        "func_documentation": "",
        "func_block": "\tpublic void actualizar() {\n\n        listaPosiciones.add(0,new Point(snake.x,snake.y));\n\t\tlistaPosiciones.remove(listaPosiciones.size()-1);\n\n        for (int i=1;i<listaPosiciones.size();i++) {\n            Point point = listaPosiciones.get(i);\n            if(snake.x == point.x && snake.y  == point.y) {\n                gameOver = true;\n            }\n        }\n\n\t\tif((snake.x > (comida.x-10) && snake.x < (comida.x+10)) && (snake.y > (comida.y-10) && snake.y < (comida.y+10))) {\n            listaPosiciones.add(0,new Point(snake.x,snake.y));\n\t\t\tSystem.out.println(listaPosiciones.size());\n\t\t\tgenerarComida();\n\t\t}\n        imagenSnake.repaint();\n\n\t}"
    },
    {
        "class name": "Snake",
        "function": "main",
        "func_documentation": "",
        "func_block": "\tpublic static void main(String[] args) {\n\t\tSnake snake1 = new Snake();\n\t}"
    },
    {
        "class name": "Snake",
        "function": "paintComponent",
        "func_documentation": "",
        "func_block": "        public void paintComponent(Graphics g) {\n            super.paintComponent(g);\n\n            if(gameOver) {\n                g.setColor(new Color(0,0,0));\n            } else {\n                g.setColor(new Color(255,255,255));\n            }\n            g.fillRect(0,0, width, height);\n            g.setColor(new Color(0,0,255));\n\n            if(listaPosiciones.size() > 0) {\n                for(int i=0;i<listaPosiciones.size();i++) {\n                    Point p = (Point)listaPosiciones.get(i);\n                    g.fillRect(p.x,p.y,widthPoint,heightPoint);\n                }\n            }\n\n            g.setColor(new Color(255,0,0));\n            g.fillRect(comida.x,comida.y,widthPoint,heightPoint);\n\n            if(gameOver) {\n                g.setFont(new Font(\"TimesRoman\", Font.BOLD, 40));\n                g.drawString(\"GAME OVER\", 300, 200);\n                g.drawString(\"SCORE \"+(listaPosiciones.size()-1), 300, 240);\n\n                g.setFont(new Font(\"TimesRoman\", Font.BOLD, 20));\n                g.drawString(\"N to Start New Game\", 100, 320);\n                g.drawString(\"ESC to Exit\", 100, 340);\n            }\n\n        }"
    },
    {
        "class name": "Snake",
        "function": "keyPressed",
        "func_documentation": "",
        "func_block": "\t\tpublic void keyPressed(KeyEvent e) {\n\n\t\t\tif(e.getKeyCode() == KeyEvent.VK_ESCAPE) {\n\t\t\t\tSystem.exit(0);\n\t\t\t} else if(e.getKeyCode() == KeyEvent.VK_RIGHT) {\n\n\t\t\t\tif(direccion != \"LEFT\") {\n                    direccion = \"RIGHT\";\n\n\t\t\t\t}\n\t\t\t} else if(e.getKeyCode() == KeyEvent.VK_LEFT) {\n\t\t\t\tif(direccion != \"RIGHT\") {\n                    direccion = \"LEFT\";\n\t\t\t\t}\n\t\t\t} else if(e.getKeyCode() == KeyEvent.VK_UP) {\n\t\t\t\tif(direccion != \"DOWN\") {\n                    direccion = \"UP\";\n\t\t\t\t}\n\t\t\t} else if(e.getKeyCode() == KeyEvent.VK_DOWN) {\n\t\t\t\tif(direccion != \"UP\") {\n                    direccion = \"DOWN\";\n\t\t\t\t}\n\n\t\t\t} else if(e.getKeyCode() == KeyEvent.VK_N) {\n                gameOver = false;\n                startGame();\n\t\t\t}\n\t\t}"
    },
    {
        "class name": "Snake",
        "function": "Momento",
        "func_documentation": "",
        "func_block": "\t\tpublic Momento() {\n\n\t\t}"
    },
    {
        "class name": "Snake",
        "function": "run",
        "func_documentation": "",
        "func_block": "\t\tpublic void run() {\n\t\t\twhile(true) {\n\t\t\t\tif((java.lang.System.currentTimeMillis() - last) > frequency) {\n\t\t\t\t\tif(!gameOver) {\n\n                        if(direccion == \"RIGHT\") {\n                            snake.x = snake.x + widthPoint;\n                            if(snake.x > width) {\n                                snake.x = 0;\n                            }\n                        } else if(direccion == \"LEFT\") {\n                            snake.x = snake.x - widthPoint;\n                            if(snake.x < 0) {\n                                snake.x = width - widthPoint;\n                            }\n                        } else if(direccion == \"UP\") {\n                            snake.y = snake.y - heightPoint;\n                            if(snake.y < 0) {\n                                snake.y = height;\n                            }\n                        } else if(direccion == \"DOWN\") {\n                            snake.y = snake.y + heightPoint;\n                            if(snake.y > height) {\n                                snake.y = 0;\n                            }\n                        }\n                    }\n                    actualizar();\n\n\t\t\t\t\tlast = java.lang.System.currentTimeMillis();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}"
    }
]